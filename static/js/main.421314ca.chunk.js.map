{"version":3,"sources":["components/Operation.js","components/NumPad.js","components/ScorePopUp.js","assets/sounds.js","components/MathGame.js","App.js","reportWebVitals.js","index.js"],"names":["Operation","operand1","operand2","operator","input","veredict","className","src","alt","veredictElement","NumPad","clickButton","onClick","ScorePopUp","score","bestScore","clickHandler","id","href","target","rel","SOUNDS","SM","this","sounds","sound","Audio","audioID","filter","play","OPERATIONS_ID","getNewOperation","result","operators","getRandomInt","min","max","Math","floor","random","length","toString","current","firstOperations","arr","index","push","operations","reducer","state","action","type","newState","map","operation","cloneOperationsState","i","payload","substring","MathGame","useReducer","operationsState","operationsDispatch","useState","secondsLeft","setSecondsLeft","viewScorePopUp","setShowScorePopUp","setSound","stateRef","useRef","highScore","localStorage","getItem","parseInt","gameStarted","scrollPixels","scrollTimes","seconds","clickButtonHandler","button","playAudio","resetGame","document","getElementById","style","transform","scrollOperationList","useEffect","setItem","window","addEventListener","event","defaultPrevented","key","preventDefault","totalHeight","firstElementChild","getBoundingClientRect","height","wrongHandicapTime_TimeOutID","op","timerID","setInterval","setTimeout","clearInterval","TIME","WRONG_HANDICAP_TIME","clearTimeout","width","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":"uOAwBeA,EAxBI,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,SAASC,EAAqC,EAArCA,SAASC,EAA4B,EAA5BA,SAASC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,SAUlD,OACI,oBAAIC,UAAU,YAAd,SACI,sBAAKA,UAAU,cAAf,UACI,4BAAIL,IACJ,4BAAIE,IACJ,4BAAID,IACJ,kCACA,4BAAIE,IAfQ,SAACC,GACrB,OAAQA,GACJ,IAAK,UAAW,OAAQ,qBAAKC,UAAU,cAAcC,IAAI,6BAA6BC,IAAI,MAC1F,IAAK,YAAa,OAAQ,qBAAKF,UAAU,gBAAgBC,IAAI,6BAA6BC,IAAI,MAC9F,QAAS,OAAQ,uBAYZC,CAAgBJ,SCElBK,EApBA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEb,OACI,sBAAKL,UAAU,SAAf,UACQ,wBAAQM,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQL,UAAU,cAAcM,QAAS,kBAAID,EAAY,MAAzD,eACA,wBAAQC,QAAS,kBAAID,EAAY,MAAjC,eACA,wBAAQL,UAAU,cAAcM,QAAS,kBAAID,EAAY,UAAzD,uBCGDE,EAlBI,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,MAAMC,EAA0B,EAA1BA,UAAUC,EAAgB,EAAhBA,aAEjC,OACI,sBAAMV,UAAU,sBAAhB,SACI,sBAAKA,UAAU,aAAf,UACI,2CACA,wCAAWQ,KACX,6CAAgBC,KAChB,wBAAQH,QAASI,EAAjB,wBACA,sBAAKC,GAAG,cAAR,UACC,qBAAKX,UAAU,cAAcC,IAAI,+BAA+BC,IAAI,YACpE,mBAAGU,KAAK,kCAAkCC,OAAO,SAASC,IAAI,aAA9D,mC,cCVXC,EACM,s5LADNA,EAEO,0kNAFPA,EAGS,sqLAHTA,EAIQ,0sOCKRC,EAAK,I,WDDP,aAAc,oBACVC,KAAKC,OAAS,CACV,CAACP,GAAG,SAAUQ,MAAO,IAAIC,MAAML,IAC/B,CAACJ,GAAG,UAAWQ,MAAO,IAAIC,MAAML,IAChC,CAACJ,GAAG,YAAaQ,MAAO,IAAIC,MAAML,IAClC,CAACJ,GAAG,WAAYQ,MAAO,IAAIC,MAAML,K,6CAIzC,SAAUM,GACNJ,KAAKC,OAAOI,QAAO,SAAAH,GAAK,OAAEA,EAAMR,KAAKU,KAAS,GAAGF,MAAMI,W,MCR3DC,EAAgB,EAGdC,EAAkB,WAEpB,IAAI9B,EAASC,EAASC,EAAS6B,EAD/BF,IAEA,IAAMG,EAAY,CAAC,IAAI,IAAI,KAE3B,SAASC,EAAaC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAI,IAAMA,EAKvD,OAFAhC,EAAW8B,EAAUI,KAAKC,MAAMD,KAAKE,SAAWN,EAAUO,UAGtD,IAAK,IAEOR,GAFA/B,EAAWiC,EAAa,EAAE,MAC1BhC,EAAWgC,EAAa,EAAE,KAE1B,MACZ,IAAK,IAEOF,GAFA/B,EAAWiC,EAAa,EAAE,MAC1BhC,EAAWgC,EAAa,EAAE,IAE1B,MACZ,IAAK,IAEOF,GAFA/B,EAAWiC,EAAa,EAAE,KAC1BhC,EAAWgC,EAAa,EAAE,IAK1C,MAAO,CAACjB,GAAGa,EAAcW,WACjBxC,SAASA,EAASwC,WAClBvC,SAASA,EAASuC,WAClBtC,SAAqB,MAAZA,EAAiB,IAAMA,EAChC6B,OAAOA,EAAOS,WAEdC,SAAQ,EACRtC,MAAM,GACNC,SAAS,KAEfsC,EAAkB,WAEpB,IADA,IAAIC,EAAM,GACDC,EAAQ,EAAGA,EA7CS,EA6CyBA,IAClDD,EAAIE,KAAKf,KAGb,OADAa,EAAI,GAAGF,SAAU,EACVE,GAQLG,EAAaJ,IAEbK,EAAU,SAACC,EAAMC,GAEnB,GAAoB,UAAhBA,EAAOC,KACP,OAAOR,IAGX,IAAIS,EAdoB,SAACH,GAEzB,OAAOA,EAAMI,KAAM,SAACC,GAChB,OAAO,eAAIA,MAWCC,CAAqBN,GACrC,OAAOC,EAAOC,MACV,IAAK,QACD,IAAK,IAAIK,EAAI,EAAGA,EAAIJ,EAASZ,OAAQgB,IAAK,CACtC,IAAIF,EAAYF,EAASI,GACzB,GAAGF,EAAUZ,QAAQ,CACjB,OAAQQ,EAAOO,SACX,IAAK,IAA0B,MAAlBH,EAAUlD,OAAiC,OAAlBkD,EAAUlD,QACpCkD,EAAUlD,MAAOkD,EAAUlD,MAAQ,KACnC,MACZ,IAAK,IAAKkD,EAAUlD,MAA6B,MAArBkD,EAAUlD,MAAM,GAChCkD,EAAUlD,MAAO,IAAKkD,EAAUlD,MAChCkD,EAAUlD,MAAOkD,EAAUlD,MAAMsD,UAAU,EAAEJ,EAAUlD,MAAMoC,QAC7D,MACZ,QACOc,EAAUlD,MAAMoC,OAAO,GAA0B,MAApBc,EAAUlD,QACtCkD,EAAUlD,MAAQkD,EAAUlD,MAAQ8C,EAAOO,SAGvD,OAGR,OAAOL,EAEX,IAAK,QACO,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAASZ,OAAQgB,IACjC,GAAGJ,EAASI,GAAGd,QAAQ,CACnBU,EAASI,GAAGpD,MAAQ,GACpB,MAGR,OAAOgD,EAEnB,IAAK,OACOA,EAASN,KAAKf,KAEd,IAAK,IAAIyB,EAAI,EAAGA,EAAIJ,EAASZ,OAAQgB,IACjC,GAAGJ,EAASI,GAAGd,QAAQ,CACnBU,EAASI,GAAGd,SAAU,EACtBU,EAASI,GAAGnD,SAAW6C,EAAOO,QAC9BL,EAASI,EAAE,GAAGd,SAAU,EACxB,MAGR,OAAOU,EAEnB,QACQ,OAAOH,IA8KRU,EAxKE,WACb,MAA6CC,qBAAWZ,EAAQD,GAAhE,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,EAAqCC,mBAvH5B,IAuHT,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA2CF,oBAAS,GAApD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAuBJ,oBAAS,GAAhC,mBAAOtC,EAAP,KAAa2C,EAAb,KACMC,EAAWC,iBAAO,CACpBxD,MAAM,EACNyD,UAAgD,OAArCC,aAAaC,QAAQ,aAAsBC,SAASF,aAAaC,QAAQ,aAAa,IAAM,EACvGE,aAAY,EACZC,aAAa,EACbC,YAAY,EACZC,QAhIK,KAmIHC,EAAqB,SAACC,GACrBvD,GACCH,EAAG2D,UAAU,UAMjBnB,EAJY,UAATkB,EAIgB,CAAC7B,KAAK,QAASM,QAAQuB,GAHnB,CAAC7B,KAAK,WAM3B+B,EAAY,WACdb,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCoC,QA/InC,GA+IiDH,aAAY,EAAM7D,MAAM,IAC9EmD,EAhJK,IAiJLE,GAAkB,GAClBL,EAAmB,CAACX,KAAK,UACzBgC,SAASC,eAAe,iBAAiBC,MAAMC,UAAY,kBAC3DjB,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCmC,YAAY,KAYxD,IAAMU,EAAsB,WAEZJ,SAASC,eAAe,iBAEhCC,MAAMC,UAAY,gBAAgBjB,EAAS3B,QAAQkC,aAAeP,EAAS3B,QAAQmC,aAAapC,WAAW,MAC/G4B,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCmC,YAAaR,EAAS3B,QAAQmC,YAAY,KAiFtF,OA7EDW,qBAAU,WACmC,OAApChB,aAAaC,QAAQ,cACrBD,aAAaiB,QAAQ,YAAa,KAEtCC,OAAOC,iBAAiB,WAAW,SAAUC,GACzC,IAAIA,EAAMC,iBAAV,CAGA,GAAGxB,EAAS3B,QAAQoC,QAAQ,EAC5B,OAAQc,EAAME,KACV,IAAK,IAAIf,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,IAAIA,EAAmB,KAAK,MACjC,IAAK,YAAaA,EAAmB,SAAS,MAC9C,QAAQ,OAEZa,EAAMG,qBACH,GAGP,IAAIC,EAAcb,SAASC,eAAe,iBAAiBa,kBAAkBA,kBAC5EC,wBAAwBC,OACzB9B,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCkC,aAAcoB,MACxD,IAGFR,qBAAU,WACN,IAAIY,EACE9C,EAAYO,EAAgBjC,QAAO,SAACyE,GAAD,OAAMA,EAAG3D,WAAS,GACrDtC,EAAQkD,EAAUlD,MAExB,GAAgB,OAAbkD,GAA6B,KAARlD,GAAsB,MAARA,EAAY,CAC9C,IAAKiE,EAAS3B,QAAQiC,YAAY,CAE9BN,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCiC,aAAY,IACpD,IAAI2B,EAAUC,aAAY,WACtBlC,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwCoC,QAAUT,EAAS3B,QAAQoC,QAAU,IAC7Eb,EAAeI,EAAS3B,QAAQoC,WACjC,KAGH0B,YAAW,WACPC,cAAcH,GACVjC,EAAS3B,QAAQ5B,MAAQuD,EAAS3B,QAAQ6B,YAC1CF,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAyC6B,UAAWF,EAAS3B,QAAQ5B,QACrE0D,aAAaiB,QAAQ,YAAapB,EAAS3B,QAAQ5B,MAAM2B,aAE7D0B,GAAkB,KAElBuC,MAGR,GAAGpD,EAAUtB,SAAS5B,EAMlB,OALAgG,EAA8BI,YAAW,WACrC1C,EAAmB,CAACX,KAAK,OAAOM,QAAQ,cACrChC,GAAOH,EAAG2D,UAAU,aACvBM,MACDoB,MACI,WAAKC,aAAaR,IAEzBtC,EAAmB,CAACX,KAAK,OAAOM,QAAQ,YACrChC,GAAOH,EAAG2D,UAAU,WACvBM,IACAlB,EAAS3B,QAAT,2BAAuB2B,EAAS3B,SAAhC,IAAwC5B,MAAMuD,EAAS3B,QAAQ5B,MAAM,OAG9E,CAAC+C,EAAgBpC,IAIhB,iCACoB,IAAnByC,GAhGEzC,GAAOH,EAAG2D,UAAU,YAChB,cAAC,EAAD,CACHnE,MAAOuD,EAAS3B,QAAQ5B,MACxBC,UAAWsD,EAAS3B,QAAQ6B,UAC5BvD,aAAckE,KA4FqB,KACvC,qBAAK5E,UAAU,gBAAf,SACA,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,MAAf,UACKmB,EACA,qBAAK4D,MAAO,CAACwB,MAAM,QAAStG,IAAI,gCAAgCC,IAAI,SAASI,QAAS,kBAAIwD,GAAU3C,MACpG,qBAAK4D,MAAO,CAACwB,MAAM,QAAStG,IAAI,iCAAiCC,IAAI,UAAUI,QAAS,kBAAIwD,GAAU3C,MAEvG,uCAAUuC,EAAV,QACA,wCAAWK,EAAS3B,QAAQ5B,MAA5B,WAEJ,qBAAKR,UAAU,UAAf,SACI,qBAAKW,GAAG,gBAAgBX,UAAU,gBAAlC,SACI,6BACKuD,EAAgBR,KAAI,SAACC,EAAUT,GAC5B,OACI,cAAC,EAAD,CACI5C,SAAUqD,EAAUrD,SACpBC,SAAUoD,EAAUpD,SACpBC,SAAUmD,EAAUnD,SACpBC,MAASkD,EAAUlD,MACnBC,SAAYiD,EAAUjD,UALViD,EAAUrC,aAY9C,cAAC,EAAD,CAAQN,YAAeoE,aCpRpB+B,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAO1B2B,IAGI,kBAAmBY,WACrBA,UAAUC,cAAcC,SAAS,WAAWC,OAAM,SAAAC,GAChDC,QAAQC,IAAIF,EAAMG,c","file":"static/js/main.421314ca.chunk.js","sourcesContent":[" const Operation = ({operand1,operand2,operator,input,veredict}) =>{\n\n    const veredictElement = (veredict)=>{\n        switch (veredict) {\n            case 'correct': return (<img className=\"correctIcon\" src=\"math-game/assets/check.svg\" alt=\"R\"/>);\n            case 'incorrect': return (<img className=\"incorrectIcon\" src=\"math-game/assets/cross.svg\" alt=\"W\"/>);     \n            default: return (<p></p>);\n        }\n    }\n\n    return (\n        <li className=\"operation\">\n            <div className=\"licontainer\">\n                <p>{operand1}</p>\n                <p>{operator}</p>\n                <p>{operand2}</p>\n                <p>=</p>\n                <p>{input}</p>\n                {veredictElement(veredict)}\n          </div>\n        </li>\n    )\n}\n\nexport default Operation","const NumPad = ({clickButton}) => {\n\n    return(\n        <div className=\"numPad\">\n                <button onClick={()=>clickButton('7')}>7</button>\n                <button onClick={()=>clickButton('8')}>8</button>\n                <button onClick={()=>clickButton('9')}>9</button>\n                <button onClick={()=>clickButton('4')}>4</button>\n                <button onClick={()=>clickButton('5')}>5</button>\n                <button onClick={()=>clickButton('6')}>6</button>\n                <button onClick={()=>clickButton('1')}>1</button>\n                <button onClick={()=>clickButton('2')}>2</button>\n                <button onClick={()=>clickButton('3')}>3</button>\n                <button className=\"minusButton\" onClick={()=>clickButton('-')}>-</button>\n                <button onClick={()=>clickButton('0')}>0</button>\n                <button className=\"clearButton\" onClick={()=>clickButton('clear')}>clear</button>\n            </div>\n    )\n}\n\nexport default NumPad","const ScorePopUp = ({score,bestScore,clickHandler})=>{\n\n    return(\n        <span className=\"scorePopUpContainer\">\n            <div className=\"scorePopUp\">\n                <p>Game Over!</p>\n                <p>Score: {score}</p>\n                <p>High score: {bestScore}</p>\n                <button onClick={clickHandler}>Play Again</button>\n                <div id=\"twitterInfo\">\n                 <img className=\"twitterIcon\" src=\"math-game/assets/twitter.svg\" alt=\"twitter\"/>\n                 <a href=\"https://twitter.com/joragasudev\" target=\"_blank\" rel=\"noreferrer\">@joragasudev</a>\n                </div>\n            </div>\n        </span>\n    )\n}\n\nexport default ScorePopUp;","//https://dopiaza.org/tools/datauri/index.php audio to data:URI\nconst SOUNDS = {\n    button: 'data:audio/mpeg;base64,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',\n    correct: 'data:audio/mpeg;base64,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VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7QMT+gApcrzXsPbShP5imvPae1FVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//swxP2ASTjfMew+B+FKlSZ+nvAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sgxPKAC8SRNfmsAAAAADSDgAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==', \n    incorrect: 'data:audio/mpeg;base64,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/Q4jGep5poxJEyU6W1GqUgpcUgJst8fKUMI2ycvGYvyDIKdKuY1CuRCSwoklsJibxbUJTq8qrQYV2XRzAXSbkpSbB7V8uujWra1ms2+bbn1OhUUVgjamOzUyTPuE6FMjiOoF6AJSGXjahOKx2WVxyhI+JTn7yVyN1dLLjy2l3bZsVmaa7lVFlFjfvjk978rQqhFYeJiGOVX/gAAsLnosKxFkYKeJA4tKX1LmJJoWuNEhNEgjLozErNurrksNQIGh7BQjk1Jv/yZaIHUyYKGCDhIHQqIAKFQyCwqGQWJPs/F+pUxBTUUzLjk5LjNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//tgxPqAFkFDQU29jelCEGa9hg2UVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV',\n    gameover: 'data:audio/mpeg;base64,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CAZPN/////EiFTen0SAmAAkATteb5gVnZZGAJqB0FPYzw3VcsoR7/6bljSnaq5t//y7/1Aunedmcmazsxl2kAJYBAoBE2Nf+gE1g3m/+YAHMy19L+cP//smGSF7//T/+keDtAwEfb/r/0USi//NIxNcd+8pufi6oXB0iP9av5if/V/X/TD5Sr/////jPB4nt8spAAJAE4Wk+CDKl+KGHQEYiF2O4fdIQK3cv1dZ7q+PgHP53+c/5sqmKdoFPMSKduu8KAykCGcBYEYoL/sDV0Kiv/1JgSgFtn6P84f//MHD9hgP//f/6joQhSIq/9f+7lgTar/b+gf//1/zg//NIxOId28pt3qZoeGEj7/////3FXb66QUACQBOHHPgghTZQyAdxPGXWXadCREmeoXjmAGzIDsT03rKAABEqEPLSc1KIygdcuAVeAiAGaH+gEK4YLf/QBEyNH9X9R//9Sg9sYL//2//TEBRht/6/9C4YKP//+p////WKHV/////lMYVvqhyFnAAsAbO774EM//M4xO0dI8pknhaoXM9aPlXUMNrY5VcNjg6eeHJtiyBseZ9XcG4nE+DDKBTRL44QyOgCEgOYm3/CGBLf/rAslf0/6j//9QvU////9ZkCQhRkf/v/WxiHYPf7/1f///cPkJ1/////5KjarkAA//NIxNcbM8plPhZoRIAD5n/GgCKH4yMxnkIpw5b5nrUClArH/45FM9Rp7E1d19ff5WDQCZ1m0InpTKos01nROhYuC3k2PersCcQVR7/5YA14YyX6H9R//6iyiMEPO3/9//zAEIAiCd/+/82SI4Mvpf/////+oUsbf////5KklRAkAAkATuBj4MKhbNGEBSt3//M4xO0Z885yfhZmTAdfs29VkPE8sf/sXswCAI8py/7mW8YkEJqNksi5uJQUzlL4mQmnBSCXm/2BqqGI3/qMwM4FT+n/Uf//RMwgADuR//q/+kYh8YXFPt/1P/NGLIZGT//////9Ys13//Wq//M4xOQc68pUnC6oXDA1ACkAXpir4U5i4xIQTDV1Llja/RVEi3/+5blKhSSLc/7vP+hGnaWNXrVmmmo6sgzCfw2FS/+EMiR//UANp/t/Uf//U4rxIf/7f/rDukR/+r/XYUVv//////ULpf////NIxM8byz5Z3haoXJIQBygLgC+UMfYd2qwYOzgCCfepvLPIhBNA7qIEiTIGHRjy+cfOA5MXjVloOccaxmCSUZMw/8GpYhG/+YgZAGj9/6j//6lCvjZf/+//5mCACKOh/6m/pJEcF1Zt//////8m0v//JQwBYADcAb3hn4Iy/pArAPKX8LVTO6sMVmWtZMqS//M4xOIYA0Jh3hZmXAOGJds61RZBVGTuqxuaJggkHG3/hDBLN/9QBVP9D+o///QFpX//v/+kGXA8Tf/b+eYfYX+T//////+at//6FRYhZAGlk7viL5w4ikkXQxOFU+yTTEE0HL8ysGFz3ObH//M4xOEZO0JaXhaoTEA959dakUS8TqQhUKmPP/wI4jf/rAE1vv/U//+x/////qD8l///rohKt//////8y//+hRkBJADcAW/hj4YhTZTJDUeLlvLH6pU6r3XLNYKpv16RiAoLSfRRLxioMcDS//M4xNsW00JefhZkTJH/wyYlv/1A3iV9v6n//zj//6//ueC0YLiH2/6/9JykJ/f//////50CD+gF4UPu4gNW1g0YXpIAZoLUsEuNNuqoLmkOZPRJQDTFL61FNQTEKN/6ghQMFv/rD5W+/9T///M4xN4Uo0JqfoTa0P+r////1h3yR///9ZQ///6lDQFxFroegD60VbhekQ9nZdRDRvtzNjoWgr6LVEeAjk/6aAJkYJ/9QQwKpv/qDLT////TC+I00P///J0XICDOH1wH4A+taSNIYwYX1EYP//MoxOoVAz5efhYgTF6DmQWJG3Nl3IYCC5Uf7OagVMFxD7f6AQgFRb/1FEAIJr///9AwE7///0GyAog0nH3A8AH6TtUKGBRl//M4xNER4pZqfgRmMPyONup0TECBki+yrHwDWLf+URQYLybN/WgCbB4W/9ZHAaoSTf//+gCjv/oqCEqzYPzvFYQ36P1aRAUhS3agkgARQsJqG6r/ySNf/zowp6pMQU1FMy4xMDCqqqqqqqqq//MoxOgOwpJaVpAhpKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//MoxOgPqpJmfpgVpKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//MoxOQOkjJaXpAPpKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//MYxOQIkT5RkFAbIqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//MYxNgAAAP8AAAAAKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq'\n}\n\nclass SoundManager {\n    constructor(){\n        this.sounds = [\n            {id:'button', sound: new Audio(SOUNDS.button)},\n            {id:'correct', sound: new Audio(SOUNDS.correct)},\n            {id:'incorrect', sound: new Audio(SOUNDS.incorrect)},\n            {id:'gameover', sound: new Audio(SOUNDS.gameover)}\n        ];\n    }\n\n    playAudio(audioID){\n        this.sounds.filter(sound=>sound.id===audioID)[0].sound.play();\n    }\n}\n\nexport default SoundManager;","import './css/styles.css'\nimport Operation from './Operation'\nimport NumPad from './NumPad'\nimport ScorePopUp from './ScorePopUp';\nimport SoundManager from '../assets/sounds';\nimport { useState ,useEffect, useReducer,useRef} from 'react'\n\nconst FIRST_OPEARATIONS_AMOUNT = 5;\nconst TIME = 45;\nconst WRONG_HANDICAP_TIME = 1.4;\nconst SM = new SoundManager();\nlet OPERATIONS_ID = 0;\n\n\nconst getNewOperation = ()=>{\n    OPERATIONS_ID++;\n    let operand1,operand2,operator,result;\n    const operators = ['+','-','*'];\n\n    function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min+1)) + min;\n    }\n\n    operator = operators[Math.floor(Math.random() * operators.length)];\n\n    switch (operator) {\n        case '+':{  operand1 = getRandomInt(0,20);\n                    operand2 = getRandomInt(0,20);\n                    result = operand1 + operand2;\n                    break;}\n        case '-':{  operand1 = getRandomInt(0,10);\n                    operand2 = getRandomInt(0,9); \n                    result = operand1 - operand2;\n                    break;}\n        case '*':{  operand1 = getRandomInt(0,9);\n                    operand2 = getRandomInt(0,9);\n                    result = operand1 * operand2;\n                    break;}\n        default: break;\n    }\n    return {id:OPERATIONS_ID.toString(),\n            operand1:operand1.toString(),\n            operand2:operand2.toString(),\n            operator:operator ==='*'? 'x' : operator,\n            result:result.toString(),\n            // result:'1', //(to easy test)\n            current:false,\n            input:'',\n            veredict:''}\n}\nconst firstOperations = ()=>{\n    let arr = [];\n    for (let index = 0; index < FIRST_OPEARATIONS_AMOUNT; index++) {\n        arr.push(getNewOperation());\n    }\n    arr[0].current = true;\n    return arr;\n}\nconst cloneOperationsState =(state)=>{\n    //clones a shallow state only.\n    return state.map ( (operation) =>{\n        return {...operation};\n    });\n}\nconst operations = firstOperations();\n\nconst reducer = (state,action)=> {\n    //action ={ type : 'string', payload: any}\n    if (action.type === 'reset'){\n        return firstOperations();\n    }\n\n    let newState  = cloneOperationsState(state);\n    switch(action.type){\n        case 'input':{\n            for (let i = 0; i < newState.length; i++) {\n                let operation = newState[i]\n                if(operation.current){\n                    switch (action.payload) {\n                        case '0': if(operation.input!=='0' && operation.input!=='-0')\n                                    operation.input= operation.input + '0';\n                                    break;\n                        case '-': operation.input = operation.input[0]!=='-' ?\n                                    operation.input= '-'+ operation.input:\n                                    operation.input= operation.input.substring(1,operation.input.length);\n                                    break;\n                        default:{\n                            if(operation.input.length<2 && (operation.input !== '0'))\n                                operation.input = operation.input + action.payload; \n                            break;}\n                    }\n                    break;\n                }\n            }\n            return newState;\n        }\n        case 'clear':{\n                    for (let i = 0; i < newState.length; i++) {\n                        if(newState[i].current){\n                            newState[i].input = '';\n                            break;\n                        }\n                    }\n                    return newState;   \n                    }\n        case 'next':{\n                    newState.push(getNewOperation());\n                    //newState.shift();\n                    for (let i = 0; i < newState.length; i++) {\n                        if(newState[i].current){\n                            newState[i].current = false;\n                            newState[i].veredict = action.payload;\n                            newState[i+1].current = true;\n                            break;\n                        }\n                    }\n                    return newState;\n                    }\n        default:\n                return state\n    }\n}\n\n    \n\nconst MathGame = ()=>{\n    const [operationsState,operationsDispatch] = useReducer(reducer,operations);\n    const [secondsLeft,setSecondsLeft] = useState(TIME);\n    const [viewScorePopUp,setShowScorePopUp] = useState(false);\n    const [sound,setSound]=useState(false);\n    const stateRef = useRef({\n        score:0,\n        highScore: localStorage.getItem('highscore')!== null? parseInt(localStorage.getItem('highscore'),10) : 0,\n        gameStarted:false,\n        scrollPixels:0,\n        scrollTimes:1,\n        seconds:TIME\n    });\n\n    const clickButtonHandler = (button) => {\n        if(sound) \n            SM.playAudio('button');\n\n        if(button==='clear'){\n            operationsDispatch({type:'clear'}); \n            return;\n        }\n        operationsDispatch({type:'input', payload:button});\n    };\n\n    const resetGame = ()=>{\n        stateRef.current = {...stateRef.current,seconds: TIME,gameStarted:false,score:0};\n        setSecondsLeft(TIME); \n        setShowScorePopUp(false);\n        operationsDispatch({type:'reset'});\n        document.getElementById('listContainer').style.transform = 'translateY(0px)';\n        stateRef.current = {...stateRef.current,scrollTimes:1};\n    }\n\n    function showPopUp(){\n        if(sound) SM.playAudio('gameover');\n        return(<ScorePopUp \n            score={stateRef.current.score} \n            bestScore={stateRef.current.highScore} \n            clickHandler={resetGame}\n        />);\n    }\n\n    const scrollOperationList = ()=>{\n        //Scroll the operations list by list item height.\n        const elm = document.getElementById('listContainer');\n        //el clientHeight mas el margen del primer hijo(1er li) del primer hijo (ul) de id (listcontainer).\n        elm.style.transform = 'translateY(-'+(stateRef.current.scrollPixels * stateRef.current.scrollTimes).toString()+'px)';\n        stateRef.current = {...stateRef.current,scrollTimes:(stateRef.current.scrollTimes+1)};\n    }\n    \n    //INIT\n   useEffect(()=>{\n        if (localStorage.getItem('highscore')===null)\n            localStorage.setItem('highscore', '0');\n\n        window.addEventListener(\"keydown\", function (event) {\n            if (event.defaultPrevented) {\n                return; \n            }\n            if(stateRef.current.seconds>0)\n            switch (event.key) {\n                case \"1\":clickButtonHandler('1');break;\n                case \"2\":clickButtonHandler('2');break;\n                case \"3\":clickButtonHandler('3');break;\n                case \"4\":clickButtonHandler('4');break;\n                case \"5\":clickButtonHandler('5');break;\n                case \"6\":clickButtonHandler('6');break;\n                case \"7\":clickButtonHandler('7');break;\n                case \"8\":clickButtonHandler('8');break;\n                case \"9\":clickButtonHandler('9');break;\n                case \"0\":clickButtonHandler('0');break;\n                case \"-\":clickButtonHandler('-');break;\n                case \"Backspace\": clickButtonHandler('clear');break;\n                default:return;\n            }\n            event.preventDefault();\n            }, true);\n\n        //searching for : listContainer(div) ->  <lu> ->  <li>.height    \n        let totalHeight = document.getElementById('listContainer').firstElementChild.firstElementChild\n        .getBoundingClientRect().height;//Warnign, this do not considerate margin.\n        stateRef.current = {...stateRef.current,scrollPixels:(totalHeight)};\n    },[]);\n    \n\n    useEffect(()=>{\n        let wrongHandicapTime_TimeOutID;\n        const operation = operationsState.filter((op)=>op.current)[0];\n        const input = operation.input;\n\n        if(operation!== null && input!=='' && input!=='-'){\n            if (!stateRef.current.gameStarted){\n                //Start game\n                stateRef.current = {...stateRef.current,gameStarted:true};\n                let timerID = setInterval(() => {\n                    stateRef.current = {...stateRef.current,seconds: (stateRef.current.seconds - 1)};\n                    setSecondsLeft(stateRef.current.seconds);\n                }, 1000);\n\n                //End game in TIME seconds.\n                setTimeout(()=>{\n                    clearInterval(timerID);\n                    if (stateRef.current.score > stateRef.current.highScore){\n                        stateRef.current = {...stateRef.current, highScore: stateRef.current.score };\n                        localStorage.setItem('highscore', stateRef.current.score.toString()); \n                    }\n                    setShowScorePopUp(true);\n\n                }, (TIME*1000));\n            }\n\n            if(operation.result!==input){\n                wrongHandicapTime_TimeOutID = setTimeout(()=>{\n                    operationsDispatch({type:'next',payload:'incorrect'});\n                    if(sound) SM.playAudio('incorrect');\n                    scrollOperationList();\n                }, WRONG_HANDICAP_TIME * 1000);\n                return(()=>{clearTimeout(wrongHandicapTime_TimeOutID);})\n            }else{\n                operationsDispatch({type:'next',payload:'correct'});\n                if(sound) SM.playAudio('correct');\n                scrollOperationList();\n                stateRef.current = {...stateRef.current,score:stateRef.current.score+1};\n            }\n        }\n    } ,[operationsState,sound] );\n    \n\n    return (\n        <div>\n        {viewScorePopUp === true? showPopUp(): null}\n        <div className=\"gameContainer\">\n        <div className=\"game\">\n            <div className=\"GUI\">\n                {sound?\n                 <img style={{width:'1rem'}} src=\"math-game/assets/sound_on.svg\" alt=\"Vol on\" onClick={()=>setSound(!sound)}/>\n                :<img style={{width:'1rem'}} src=\"math-game/assets/sound_off.svg\" alt=\"Vol off\" onClick={()=>setSound(!sound)}/>\n                }\n                <p>Time: {secondsLeft}  </p>\n                <p>Score: {stateRef.current.score}  </p>\n            </div>\n            <div className=\"display\">\n                <div id='listContainer' className='listContainer'>\n                    <ul>\n                        {operationsState.map((operation,index)=>{\n                            return(\n                                <Operation key={operation.id}\n                                    operand1={operation.operand1} \n                                    operand2={operation.operand2} \n                                    operator={operation.operator}\n                                    input = {operation.input}\n                                    veredict = {operation.veredict}\n                                >\n                            </Operation>)\n                        })}\n                    </ul>\n                </div>\n            </div>\n            <NumPad clickButton = {clickButtonHandler}/>\n           \n        </div>\n        </div>\n        </div>\n    )\n\n}\n\nexport default MathGame;","import MathGame from './components/MathGame';\n\nfunction App() {\n  return (\n    <MathGame/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//service worker pp\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('./sw.js').catch(error => {\n    console.log(error.message);\n  });\n}\n"],"sourceRoot":""}